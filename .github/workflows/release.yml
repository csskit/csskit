# mostly copied from https://raw.githubusercontent.com/web-infra-dev/oxc/main/.github/workflows/release_cli.yml
name: release
on:
  workflow_run:
    workflows: [test]
    types: [completed]
    branches: [main]
  workflow_dispatch:
concurrency:
  group: "release"
  cancel-in-progress: true
permissions:
  contents: write
  id-token: write
jobs:
  tag:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -fa canary -m "Latest Continuous Release" ${GITHUB_SHA}
          git push --force origin canary:refs/tags/canary

  build:
    if: |
      ${{
        github.event_name == 'workflow_dispatch' ||
        (
          github.event.workflow_run.conclusion == 'success' &&
          github.repository_owner == 'csskit' &&
          github.ref_name == 'main'
        )
      }}

    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            code-target: win32-x64

          - os: windows-latest
            target: aarch64-pc-windows-msvc
            code-target: win32-arm64

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            code-target: linux-arm64

          - os: macos-latest
            target: x86_64-apple-darwin
            code-target: darwin-x64

          - os: macos-latest
            target: aarch64-apple-darwin
            code-target: darwin-arm64

    name: Package ${{ matrix.code-target }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Mise
        uses: jdx/mise-action@c37c93293d6b742fc901e1406b8f764f6fb19dac #v2.4.4
      - name: Rust cache
        uses: swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 #v2.8.0
        with:
          shared-key: release-${{ matrix.target }}
      - name: Install arm64 toolchain
        if: matrix.code-target == 'linux-arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
      - name: Ensure rust toolchain is installed
        run: rustup target add ${{ matrix.target }}
      - name: Build Binary
        # strip debug symbols from std, see https://github.com/johnthagen/min-sized-rust#remove-panic-string-formatting-with-panic_immediate_abort
        run: cargo build --release --target ${{ matrix.target }} -p csskit
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

      - name: Archive Binary
        if: runner.os == 'Windows'
        shell: bash
        run: |
          BIN_NAME=csskit-${{ matrix.code-target }}
          mv target/${{ matrix.target }}/release/csskit.exe $BIN_NAME.exe

      - name: Archive Binary
        if: runner.os != 'Windows'
        run: |
          BIN_NAME=csskit-${{ matrix.code-target }}
          mv target/${{ matrix.target }}/release/csskit $BIN_NAME

      - run: chmod +x csskit-*

      - name: Upload Binary
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 #v4.6.2
        with:
          if-no-files-found: error
          name: binary-${{ matrix.code-target }}
          path: csskit-*

  deploy:
    env:
      TAG_NAME: ${{ format('0.0.0-canary.{0}', github.SHA) }}
      DIST_TAG: canary
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Set TAG_NAME env
        run: echo "TAG_NAME=$TAG_NAME"; echo "DIST_TAG=$DIST_TAG"
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Download Artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 #v4.3.0
      - name: Copy binaries to package
        run: cp binary-*/* packages/csskit/bin
      - run: tree
      - name: Install Dependencies
        run: npm i
        working-directory: ./packages/csskit
      - name: Tag Package with canary release tag
        run: npm version ${TAG_NAME} --no-git-tag-version
        working-directory: ./packages/csskit
      - name: Deploy to npm
        run: npm whoami; npm pub --provenance --tag $DIST_TAG --access public
        working-directory: ./packages/csskit
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
      - name: Update Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 #v2.3.2
        with:
          name: Canary
          prerelease: true
          tag_name: canary
          target_commitish: ${{ github.sha }}
          files: binary-*/*
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            This release is automatically built and generated on every commit to main that passes tests.

            And is currently published to npm:
            ```shell
            npm i csskit@canary
            ```
