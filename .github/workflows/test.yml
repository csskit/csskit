name: test
on:
  push:
    branches: ["main"]
  pull_request:

permissions:
  contents: read
  id-token: write

env:
  CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            code-target: win32-x64

          - os: windows-latest
            target: aarch64-pc-windows-msvc
            code-target: win32-arm64

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            code-target: linux-arm64

          - os: macos-latest
            target: x86_64-apple-darwin
            code-target: darwin-x64

          - os: macos-latest
            target: aarch64-apple-darwin
            code-target: darwin-arm64

    name: Build & Test on ${{ matrix.code-target }}
    runs-on: ${{ matrix.os }}
    steps:
      - run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - run: rustup target add ${{ matrix.target }}
      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: release-${{ matrix.target }}
      - run: cargo test --all-features
      - run: cargo fmt --check

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache
        uses: Swatinem/rust-cache@v2
        # Ensure that docs can also build
      - run: cargo doc --all-features --no-deps
