name: test
on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:

permissions:
  contents: read
  id-token: write

env:
  CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            code-target: win32-x64

          - os: windows-latest
            target: aarch64-pc-windows-msvc
            code-target: win32-arm64

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            code-target: linux-arm64

          - os: macos-latest
            target: x86_64-apple-darwin
            code-target: darwin-x64

          - os: macos-latest
            target: aarch64-apple-darwin
            code-target: darwin-arm64

    name: Build & Test on ${{ matrix.code-target }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Configure git line endings
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          submodules: "true"
      - name: Mise
        uses: jdx/mise-action@c37c93293d6b742fc901e1406b8f764f6fb19dac #v2.4.4
      - name: Rust cache
        uses: swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 #v2.8.0
        with:
          shared-key: test-${{ matrix.target }}
      - run: cargo test --all-features

  clippy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Mise
        uses: jdx/mise-action@c37c93293d6b742fc901e1406b8f764f6fb19dac #v2.4.4
      - name: Ensure cargo clippy is installed
        run: rustup component add clippy
      - name: Rust cache
        uses: swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 #v2.8.0
        with:
          shared-key: global-rust-cache
        # Ensure clippy is happy with us
      - run: RUSTFLAGS="-Dwarnings" cargo clippy

  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Mise
        uses: jdx/mise-action@c37c93293d6b742fc901e1406b8f764f6fb19dac #v2.4.4
      - name: Ensure cargo fmt is installed
        run: rustup component add rustfmt
      - name: Rust cache
        uses: swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 #v2.8.0
        with:
          shared-key: global-rust-cache
        # Ensure that everything is nicely formatted
      - run: cargo fmt --check

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Mise
        uses: jdx/mise-action@c37c93293d6b742fc901e1406b8f764f6fb19dac #v2.4.4
      - name: Rust cache
        uses: swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 #v2.8.0
        with:
          shared-key: global-rust-cache
        # Ensure that docs can also build
      - run: cargo doc --all-features --no-deps

  results:
    permissions:
      pull-requests: write
    if: always()
    runs-on: ubuntu-latest
    needs: [build, fmt, clippy, docs]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Check Results
        run: |
          outcome='${{ toJSON(needs.*.result) }}'
          if [[ $(echo $outcome | jq -e 'all(. == "success")') != "true" ]]; then
            echo "Some required steps failed!";
            if [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
              gh pr review ${{ github.event.number }} --request-changes --body "Some required steps failed!";
            fi
            exit 1;
          elif [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
            gh pr review ${{ github.event.number }} --approve --body "All CI jobs have passed. Approving.";
          fi
