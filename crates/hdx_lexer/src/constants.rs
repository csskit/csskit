use super::Kind;

pub const SURROGATE_RANGE: std::ops::RangeInclusive<u32> = 0xd800..=0xdfff;

// Eof is a stand in for "Does not map"
pub const SINGLE_CHAR_TOKENS: &[Kind; 128] = &[
	/*   0 */ Kind::Eof,
	/*   1 */ Kind::Eof,
	/*   2 */ Kind::Eof,
	/*   3 */ Kind::Eof,
	/*   4 */ Kind::Eof,
	/*   5 */ Kind::Eof,
	/*   6 */ Kind::Eof,
	/*   7 */ Kind::Eof,
	/*   8 */ Kind::Eof,
	/*   9 */ Kind::Eof,
	/*  10 */ Kind::Eof,
	/*  11 */ Kind::Eof,
	/*  12 */ Kind::Eof,
	/*  13 */ Kind::Eof,
	/*  14 */ Kind::Eof,
	/*  15 */ Kind::Eof,
	/*  16 */ Kind::Eof,
	/*  17 */ Kind::Eof,
	/*  18 */ Kind::Eof,
	/*  19 */ Kind::Eof,
	/*  20 */ Kind::Eof,
	/*  21 */ Kind::Eof,
	/*  22 */ Kind::Eof,
	/*  23 */ Kind::Eof,
	/*  24 */ Kind::Eof,
	/*  25 */ Kind::Eof,
	/*  26 */ Kind::Eof,
	/*  27 */ Kind::Eof,
	/*  28 */ Kind::Eof,
	/*  29 */ Kind::Eof,
	/*  30 */ Kind::Eof,
	/*  31 */ Kind::Eof,
	/*  32 */ Kind::Eof,
	/*  33 */ Kind::Eof,
	/*  34 */ Kind::Eof,
	/*  35 */ Kind::Eof,
	/*  36 */ Kind::Eof,
	/*  37 */ Kind::Eof,
	/*  38 */ Kind::Eof,
	/*  39 */ Kind::Eof,
	/*  40 */ Kind::LeftParen, // 0x28
	/*  41 */ Kind::RightParen, // 0x29
	/*  42 */ Kind::Eof,
	/*  43 */ Kind::Eof,
	/*  44 */ Kind::Comma, // 0x2C
	/*  45 */ Kind::Eof,
	/*  46 */ Kind::Eof,
	/*  47 */ Kind::Eof,
	/*  48 */ Kind::Eof,
	/*  49 */ Kind::Eof,
	/*  50 */ Kind::Eof,
	/*  51 */ Kind::Eof,
	/*  52 */ Kind::Eof,
	/*  53 */ Kind::Eof,
	/*  54 */ Kind::Eof,
	/*  55 */ Kind::Eof,
	/*  56 */ Kind::Eof,
	/*  57 */ Kind::Eof,
	/*  58 */ Kind::Colon, // 0x3A
	/*  59 */ Kind::Semicolon, // 0x3B
	/*  60 */ Kind::Eof,
	/*  61 */ Kind::Eof,
	/*  62 */ Kind::Eof, // 0x3E
	/*  63 */ Kind::Eof,
	/*  64 */ Kind::Eof,
	/*  65 */ Kind::Eof,
	/*  66 */ Kind::Eof,
	/*  67 */ Kind::Eof,
	/*  68 */ Kind::Eof,
	/*  69 */ Kind::Eof,
	/*  70 */ Kind::Eof,
	/*  71 */ Kind::Eof,
	/*  72 */ Kind::Eof,
	/*  73 */ Kind::Eof,
	/*  74 */ Kind::Eof,
	/*  75 */ Kind::Eof,
	/*  76 */ Kind::Eof,
	/*  77 */ Kind::Eof,
	/*  78 */ Kind::Eof,
	/*  79 */ Kind::Eof,
	/*  80 */ Kind::Eof,
	/*  81 */ Kind::Eof,
	/*  82 */ Kind::Eof,
	/*  83 */ Kind::Eof,
	/*  84 */ Kind::Eof,
	/*  85 */ Kind::Eof,
	/*  86 */ Kind::Eof,
	/*  87 */ Kind::Eof,
	/*  88 */ Kind::Eof,
	/*  89 */ Kind::Eof,
	/*  90 */ Kind::Eof,
	/*  91 */ Kind::LeftSquare, // 0x5B
	/*  92 */ Kind::Eof,
	/*  93 */ Kind::RightSquare, // 0x5D
	/*  94 */ Kind::Eof,
	/*  95 */ Kind::Eof,
	/*  96 */ Kind::Eof,
	/*  97 */ Kind::Eof,
	/*  98 */ Kind::Eof,
	/*  99 */ Kind::Eof,
	/* 100 */ Kind::Eof,
	/* 101 */ Kind::Eof,
	/* 102 */ Kind::Eof,
	/* 103 */ Kind::Eof,
	/* 104 */ Kind::Eof,
	/* 105 */ Kind::Eof,
	/* 106 */ Kind::Eof,
	/* 107 */ Kind::Eof,
	/* 108 */ Kind::Eof,
	/* 109 */ Kind::Eof,
	/* 110 */ Kind::Eof,
	/* 111 */ Kind::Eof,
	/* 112 */ Kind::Eof,
	/* 113 */ Kind::Eof,
	/* 114 */ Kind::Eof,
	/* 115 */ Kind::Eof,
	/* 116 */ Kind::Eof,
	/* 117 */ Kind::Eof,
	/* 118 */ Kind::Eof,
	/* 119 */ Kind::Eof,
	/* 120 */ Kind::Eof,
	/* 121 */ Kind::Eof,
	/* 122 */ Kind::Eof,
	/* 123 */ Kind::LeftCurly, // 0x7B
	/* 124 */ Kind::Eof,
	/* 125 */ Kind::RightCurly, // 0x7D
	/* 126 */ Kind::Eof, // 0x7E
	/* 127 */ Kind::Eof,
];
