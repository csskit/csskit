[package]
name = "hdx_wasm"
version = "0.0.0"
publish = false
authors.workspace = true
edition.workspace = true
keywords.workspace = true
license.workspace = true

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook", "serde", "fancy"]
serde = ["hdx_lexer/serde", "hdx_ast/serde", "hdx_parser/serde", "bumpalo/serde"]
fancy = ["miette/fancy-no-syscall"]

[dependencies]
hdx_lexer = { workspace = true }
hdx_ast = { workspace = true }
hdx_parser = { workspace = true }
hdx_writer = { workspace = true }

bumpalo = { workspace = true }
miette = { workspace = true, features = ["derive"] }
serde = { workspace = true, features = ["derive"] }

wasm-bindgen = { workspace = true }
serde-wasm-bindgen = { workspace = true }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { workspace = true, optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.42"

[profile.dev]
opt-level = 3
lto = "fat"
codegen-units = 1
strip = "symbols"
debug = true
panic = "abort"

[profile.release]
opt-level = 3
lto = "fat"
codegen-units = 1
strip = "symbols"
debug = true
panic = "abort"

[package.metadata.wasm-pack.profile.release]
wasm-opt = false
# wasm-opt = ['-O4']
